name: Copy Hosting to Server

on:
  push:
    branches: [ main ]
    paths:
      - "hosting/**"
      - ".github/workflows/**"

jobs:
  deploy:
    name: Copy files to Server
    runs-on: ubuntu-latest

    steps:
 
      - uses: actions/checkout@master

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "./hosting/docker-compose.yml,./hosting/traefik.toml"
          target: "~/"
      
      - name: Apply docker compose changes
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.SSH_HOST }}
          USERNAME: ${{ secrets.SSH_USERNAME }}
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
          script: |
            # login to ghcr
            echo ${{secrets.SSH_PASSWORD}} | sudo -S docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            # restart containers, if neccessary
            # write envs of fitnessapp (no prefix), Learning Analytics (LA prefix) and PlantExchange (PE Prefix)
            printf "DB_URL=${{ secrets.DB_URL }} \n \
            BACKEND_PORT=${{ secrets.BACKEND_PORT }} \n \
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \n \
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \n \
            LOGS_PASSWORD=${{ secrets.LOGS_PASSWORD }} \n \
            LOGS_MONGO_ACTIVE=${{ secrets.LOGS_MONGO_ACTIVE }} \n \
            ODATAFY_DB_URL=${{ secrets.ODATAFY_DB_URL }} \n \
            LA_PORT=${{ secrets.LA_PORT }} \n \
            LA_DB_URL=${{ secrets.LA_DB_URL }} \n \
            LA_JWT_SECRET=${{ secrets.LA_JWT_SECRET }} \n \
            PE_PORT=${{ secrets.PE_PORT }} \n \
            PE_DB_URL=${{ secrets.PE_DB_URL }} \n \
            PE_JWT_SECRET=${{ secrets.PE_JWT_SECRET }}" > ./hosting/.env
            docker compose -f ./hosting/docker-compose.yml --env-file ./hosting/.env up -d --force-recreate
           
