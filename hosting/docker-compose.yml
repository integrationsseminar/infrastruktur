version: '3.9'

services:
  fitness-backend: 
    image: ghcr.io/projekt-fitnessapp/backend:latest
    labels:
      - traefik.frontend.rule=Host:api.fitnessapp.gang-of-fork.de
      - traefik.enable=true
    ports: 
      - 4000:4000
    environment:
      - PORT=${BACKEND_PORT}
      #- DB_URL=mongodb+srv://kinoticket:test1234@cluster0.ofyjc.mongodb.net/Cluster0?retryWrites=true&w=majority
      - DB_URL
    restart: always

  fitness-frontend:
    image: ghcr.io/projekt-fitnessapp/frontend:latest 
    labels:
      - traefik.frontend.rule=Host:fitnessapp.gang-of-fork.de
    ports: 
      - 4001:80
    restart: always

  learning-analytics-backend:
    image: ghcr.io/integrationsseminar/backend:latest
    labels:
     - traefik.frontend.rule=Host:api.learning-analytics.gang-of-fork.de
    ports: 
     - 4010:4000
    environment:
      - PORT=${LA_PORT}
      - DB_URL
    restart: always

  plant-exchange-backend:
    image: ghcr.io/gang-of-fork/p2p-backend:latest
    labels:
     - traefik.frontend.rule=Host:api.plantexchange.gang-of-fork.de
    ports: 
     - 4020:4000
    environment:
      - PORT=${PE_PORT}
      - DB_URL=${PE_DB_URL}
      - JWT_SECRET=${PE_JWT_SECRET}
    restart: always

  plant-exchange-frontend:
    #image: ghcr.io/gang-of-fork/p2p-frontend:latest
    image: nginxdemos/hello
    labels:
      - traefik.frontend.rule=Host:plantexchange.gang-of-fork.de
    ports: 
      - 4021:80
    restart: always



  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:1.7.20-alpine
    # Enables the web UI and tells Traefik to listen to docker
    restart: always
    labels:
      - traefik.enable=false
    ports:
      # The HTTP port
      - "80:80"  
      # The HTTPS port
      - "443:443" 
      # The Web UI
      #- "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json 
    
    

